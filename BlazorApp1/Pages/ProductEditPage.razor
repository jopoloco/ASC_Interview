@page "/products/edit/{id:int}"

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-5">
@if(product != null)
{
<MudCard>
	<MudForm Model="@product" @ref="@form" Validation="@(productValidator.ValidateValue)" ValidationDelay="0">
		<MudCardContent>
			<MudTextField @bind-Value="product.Name"                              
							For="@(() => product.Name)"
							Immediate="true"
							Label="Name" />

			<MudTextField @bind-Value="product.Price"
							For="@(() => product.Price)"
							Immediate="true"
							Label="Price" />
        </MudCardContent>
	</MudForm>
	
		<MudCardContent Class="pa-0">
            <MudList>
                <MudListSubheader>
                    Selected Courses
                </MudListSubheader>
                @foreach(var course in product.Courses)
                {
                    <MudListItem>
                        <MudElement Class="d-flex flex-row">
                            <MudText>@course.Name</MudText>
                            <MudIconButton Icon="@Icons.Filled.RemoveCircle" Color="Color.Error" @onclick="@(() => RemoveCourse(course.Id))"></MudIconButton>
                        </MudElement>
                    </MudListItem>
                }
            </MudList>
	        <MudTable ServerData="@ServerReload"
                  Hover="true" @ref="table" FixedHeader="true" FixedFooter="true" Height="55vh" Striped="true"
                  LoadingProgressColor="Color.Info">
                <ToolBarContent>
                    <MudText Typo="Typo.h6">Course List</MudText>
                    <MudSpacer />
                    <MudTextField T="string" @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.Start" DebounceInterval="500" OnDebounceIntervalElapsed="@(() => table.ReloadServerData())"
                                    AdornmentIcon="@Icons.Material.Filled.Search" OnAdornmentClick="@(() => table.ReloadServerData())" IconSize="Size.Medium" Class="mt-0" Clearable="true"></MudTextField>
                </ToolBarContent>
                <HeaderContent>
                    <MudTh><MudTableSortLabel SortLabel="Id" T="CourseVM">Id</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel SortLabel="Name" T="CourseVM">Name</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel SortLabel="CreatedDate" T="CourseVM">Created On Date</MudTableSortLabel></MudTh>
                    <MudTh></MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Course Id">@context.Id</MudTd>
                    <MudTd DataLabel="Name">@context.Name</MudTd>
                    <MudTd DataLabel="Created On Date">@context.CreatedDate.ToString("yyyy/MM/dd", System.Globalization.CultureInfo.InvariantCulture)</MudTd>
                    <MudTd DataLabel=""><MudIconButton Icon="@Icons.Filled.Add" Color="Color.Success" @onclick="@(() => AddCourse(context.Id))"></MudIconButton></MudTd>
                </RowTemplate>
                <NoRecordsContent>
                    <MudText>No matching records found</MudText>
                </NoRecordsContent>
                <LoadingContent>
                    <MudText>Loading...</MudText>
                </LoadingContent>
                <PagerContent>
                    <MudTablePager />
                </PagerContent>
            </MudTable>
		</MudCardContent>
    <MudCardActions>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" OnClick="@(async () => await Submit())">Save</MudButton>
    </MudCardActions>
</MudCard>
}
</MudContainer>